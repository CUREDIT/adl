module examples.serialisation
{

import sys.rpc.Rpc;

typedef Rpc<T,T> roundtrip<T>;

struct S1
{
    Int32 f1;
    Double f2;
};

union U1
{
    Int32 f1;
    Double f2;
};

struct S2
{
    Void f1;
    Int32 f2;
    Vector<String> f3;
    Sink<String> f4;
    S1 f5;
    U1 f6;
};

union U2
{
    Void f1;
    Int32 f2;
    Vector<String> f3;
    Sink<String> f4;
    S1 f5;
    U1 f6;
};

union Request
{
    roundtrip<Void> req_void;
    roundtrip<Bool> req_bool;

    roundtrip<Int8> req_int8;
    roundtrip<Int16> req_int16;
    roundtrip<Int32> req_int32;
    roundtrip<Int64> req_int64;

    roundtrip<Word8> req_word8;
    roundtrip<Word16> req_word16;
    roundtrip<Word32> req_word32;
    roundtrip<Word64> req_word64;

    roundtrip<Float> req_float;
    roundtrip<Double> req_double;

    roundtrip<Bytes> req_bytes;
    roundtrip<String> req_string;

    roundtrip<Vector<String>> req_vector;
    roundtrip<Sink<String>> req_sink;

    roundtrip<U1> req_u1;
    roundtrip<U2> req_u2;
    roundtrip<S1> req_s1;
    roundtrip<S2> req_s2;
};

};