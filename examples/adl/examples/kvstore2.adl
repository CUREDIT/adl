module examples.kvstore2
{

import sys.types.*;
import sys.rpc.*;

typedef String Key;
typedef String Value;
typedef String Pattern;
typedef Pair<Key,Value> KVPair;
typedef Vector<KVPair> QueryResults;

union KVRequest
{
    // put and delete don't return results,
    // but may generate an Error, due to permissions 
    // problems.
    Rpc<KVPair,Error<Void>> put;
    Rpc<Key,Error<Void>> delete;

    Rpc<Pattern,QueryResults> query;
};

typedef Sink<KVRequest> KVService;

struct Credentials
{
    String username;
    String password;        
};

// For authentication, we provide the credentials, and on
// success get back a reference to the service, otherwise
// an error message.
typedef Rpc<Credentials,Error<KVService>> AuthenticateReq;

typedef Sink<AuthenticateReq> Authenticator;

struct User
{
    Credentials credentials;
    Bool has_write_access;
};

typedef Vector<User> UserDetails;

};
