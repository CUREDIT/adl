module sys.types
{

import adlc.config.haskell.HaskellCustomType;

annotation Maybe HaskellCustomType {
  "haskellname" : "Prelude.Maybe",
  "haskellimports" : []
  };
  
annotation Either HaskellCustomType {
  "haskellname" : "Prelude.Either",
  "haskellimports" : []
  };
  
annotation Error HaskellCustomType {
  "haskellname" : "Error",
  "haskellimports" : []
  };
  
annotation Pair HaskellCustomType {
  "haskellname" : "Pair",
  "haskellimports" : []
  };
  
annotation Map HaskellCustomType {
  "haskellname" : "Map",
  "haskellimports" : []
  };
  
annotation Set HaskellCustomType {
  "haskellname" : "Set",
  "haskellimports" : []
  };

annotation Nullable HaskellCustomType {
  "haskellname" : "Nullable",
  "haskellimports" : []
  };

};
