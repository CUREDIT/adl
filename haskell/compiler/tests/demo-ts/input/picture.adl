module picture
{
    import shapes.Circle;

    newtype PictureRow = Vector<Picture>;

    /// Testing doc comment for Picture.
    union Picture
    {
        Circle circle;
        shapes.Rectangle rectangle;
        Vector<Picture> composed;
        Translated<Picture> translated;
        Void empty;
        Double numbers;
    };

    /// Testing doc comment for Translated.
    struct Translated<T>
    {
        Double xoffset = 0;
        Double yoffset = 10.5;
        Int32 layer = 1;
        T object;
    };

    // semantically an enum
    union Terminal {
        Void t1;
        Void t2;
        Void t3;
    };

    struct Gallery {
      Vector<Picture> artwork;
      Translated<Picture> moved;
    };

    struct ModernArtGallery {
        Circle circle = {
            "radius": 10.0,
            "color": {"just": "#f00"}
        };
    };

    struct ContemporaryArtGallery {
        Vector<Double> artwork = [5.6, 7.8, 9.0];
    };

    struct CircleAndBlankWall {
        Circle circle1 = {
            "radius": 5.0,
            "color": {"just": "#f00"}
        };
        Circle circle2 = {
            "radius": 5.0,
            "color": {"nothing": null}
        };
    };
};