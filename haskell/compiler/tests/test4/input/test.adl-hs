module test4
{

import adlc.config.haskell.HaskellCustomType;

annotation Date HaskellCustomType {
    "haskellname" : "Day",
    "haskellimports" : [
        "Data.Time.Calendar(Day)",
        "Data.Time.Format(parseTime,formatTime)",
        "System.Locale(defaultTimeLocale)"
     ],
    "insertCode" : [
        "type Date = Day",
        "",
        "toDate :: DateO -> Maybe Day",
        "toDate (Date s) = parseTime defaultTimeLocale \"%F\" s",
        "",
        "fromDate :: Day -> Date_ADL",
        "fromDate d = Date (formatTime defaultTimeLocale \"%F\" d)",
        "",
        "instance ADLValue Day where",
        "  atype _ = atype (defaultv :: ODate)",
        "  defaultv = let (Just d) = toDate defaultv in d",
        "  aToJSON jf d = aToJSON jf (fromDate d)",
        "  afromJSON jf jv = (aFromJSON jf jv) >>= toDate"
    ],
    "generateOrigADLType" : "DateO"
};

};